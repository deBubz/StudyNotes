#BlueJ class context
comment0.target=MinMax
comment0.text=\n\ Simple\ utility\ functions\ used\ by\ the\ Selection\ Sort\ code.\n\n\ NOTE\:\ THIS\ IS\ A\ CUT\ DOWN\ VERSION\ OF\ THE\ ENTIRE\ MINMAX\ CLASS.\n\ \ \ \ \ \ \ IT\ ONLY\ CONTAINS\ THE\ METHODS\ REQUIRED\ FOR\n\ \ \ \ \ \ \ SELECTION\ SORT.\ SOME\ OTHER\ METHODS\ IN\ THE\ FULL\ MINMAX\n\ \ \ \ \ \ \ ARE\ IN\ THE\ UTILITY\ FUNCTIONS\ FOR\ BUBBLE\ SORT.\n\ \ \n\ @author\ Raymond\ Lister\ \n\ @version\ April\ 2015\n
comment1.params=a\ first\ last
comment1.target=int\ minPosition(int[],\ int,\ int)
comment1.text=\n\ Returns\ the\ position\ of\ the\ smallest\ element\ in\ the\ given\ portion\ of\ the\ array.\n\ \n\ If\ there\ is\ more\ than\ one\ occurrence\ of\ the\ minimum\ element,\n\ minPosition\ will\ return\ one\ of\ the\ positions,\n\ but\ exactly\ which\ of\ those\ positions\ is\ not\ defined.\n\ \n\ At\ the\ time\ you\ complete\ this\ lab\ exerise\ on\ \n\ selSort04,\ you\ are\ NOT\ expected\ to\ understand\ the\n\ code\ in\ this\ method.\n\ \n\ This\ method,\ or\ a\ method\ that\ performs\ the\ same\n\ function,\ may\ be\ examinable\ in\ the\ final\ exam.\n\ (But\ the\ debug\ "print"\ statements\ are\ NOT\ examinable.)\n\ \n\ @param\ \ \ a\ \ \ \ \ \ \ An\ array\ of\ integers\n\ @param\ \ \ first\ \ \ A\ valid\ position\ in\ the\ array\ "a"\n\ @param\ \ \ last\ \ \ \ A\ valid\ position\ in\ the\ array\ "a",\ where\ first\ is\ less\ than\ or\ equal\ to\ last\n\ \n\ @return\ \ The\ POSITION\ of\ the\ minimum\ element\ in\ array\ "a"\ between\ positions\ "first\ and\ "last"\ (inclusive).\n
comment2.params=a\ first\ last
comment2.target=int\ isSorted(int[],\ int,\ int)
comment2.text=\ \n\ This\ methof\ checks\ if\ an\ array\ is\ sorted\ into\ ascending\ order.\ \n\ \n\ At\ the\ time\ you\ complete\ this\ lab\ exerise\ on\ \n\ selSort04,\ you\ are\ NOT\ expected\ to\ understand\ the\n\ code\ in\ this\ method.\n\ \n\ This\ method,\ or\ a\ method\ that\ performs\ the\ same\n\ function,\ may\ be\ examinable\ in\ the\ final\ exam.\n\ (But\ the\ debug\ "print"\ statements\ are\ NOT\ examinable.)\n\ \n\ @param\ \ \ a\ \ \ \ \ \ \ An\ array\ of\ integers\n\ @param\ \ \ first\ \ \ A\ valid\ position\ in\ the\ array\ "a"\n\ @param\ \ \ last\ \ \ \ A\ valid\ position\ in\ the\ array\ "a",\ where\ first\ is\ less\ than\ or\ equal\ to\ last\n\ \n\ @return\ \ 1\ if\ the\ elements\ from\ "first"\ to\ "last"\ are\ sorted,\ otherwise\ return\ something\ else.\ \n
comment3.params=a
comment3.target=void\ printArray(int[])
comment3.text=\n\ Prints\ out\ an\ array,\ with\ opening\ and\ closing\ braces,\ and\n\ comma\ separated\ elements.\ For\ example\ "{1,2,3,4}".\ \n\ \n\ This\ method,\ or\ a\ method\ that\ performs\ a\ similar\ \n\ function,\ may\ be\ examinable\ in\ the\ final\ exam.\ There\ is\ no\n\ debug\ output\ in\ this\ method.\ It\ is\ all\ examinable.\n\n\ @param\ \ \ a\ \ \ \ \ \ \ An\ array\ of\ integers\n
numComments=4
