



/* ControlTag Loader for Seek ANZ f8f33a00-a77d-4697-bf24-963ba1ed3c6b */
(function(w, cs) {
  
  if (/Twitter for iPhone/.test(w.navigator.userAgent || '')) {
    return;
  }

  var debugging = /kxdebug/.test(w.location);
  var log = function() {
    
    debugging && w.console && w.console.log([].slice.call(arguments).join(' '));
  };

  var load = function(url, callback) {
    log('Loading script from:', url);
    var node = w.document.createElement('script');
    node.async = true;  
    node.src = url;

    
    node.onload = node.onreadystatechange = function () {
      var state = node.readyState;
      if (!callback.done && (!state || /loaded|complete/.test(state))) {
        log('Script loaded from:', url);
        callback.done = true;  
        callback();
      }
    };

    
    var sibling = w.document.getElementsByTagName('script')[0];
    sibling.parentNode.insertBefore(node, sibling);
  };

  var config = {"app":{"name":"krux-scala-config-webservice","version":"3.42.4","schema_version":3},"confid":"vdya6270e","context_terms":[{"id":"Nt12rilq","value":"risk"},{"id":"Nt12rbzh","value":"occupational therapist"},{"id":"Nt12rl9C","value":"teachers aide"},{"id":"Nt12rez7","value":"police"},{"id":"Nt12rSw_","value":"blockchain"},{"id":"Nt12rhmh","value":"recruitment"},{"id":"Nt12rXBo","value":"electrical"},{"id":"Nt12rYDS","value":"entry level"},{"id":"Nt12rTyI","value":"cleaner"},{"id":"Nt12rd0g","value":"personal care"},{"id":"Nt12rcke","value":"owner driver"},{"id":"Nt12rUiT","value":"cyber security"},{"id":"Nt12rj5C","value":"social work"},{"id":"Nt12roSr","value":"claims"},{"id":"Nt12rgEX","value":"project co-ordinator"},{"id":"Nt12rkqo","value":"student"},{"id":"Nt12rZks","value":"indigenous"},{"id":"Nt12ri1v","value":"risk compliance"},{"id":"Nt12rVyQ","value":"delivery driver"},{"id":"Nt12rpkU","value":"plant operator"},{"id":"Nt12rhWg","value":"pscyhology"},{"id":"Nt12rakU","value":"mechanical engineering"},{"id":"Nt12rRW5","value":"aboriginal"},{"id":"Nt12rZT5","value":"immigration"},{"id":"Nt12rh2f","value":"registered nurse"},{"id":"Nt12rmOP","value":"team leader"},{"id":"Nt12rZD9","value":"graduate"},{"id":"Nt12rbjl","value":"nursing assistanct"},{"id":"Nt12reEO","value":"pharmacist"},{"id":"Nt12rXy3","value":"enrolled nurse"},{"id":"Nt12rnQJ","value":"travel"},{"id":"Nt12rTh9","value":"child care"},{"id":"Nt12rfEb","value":"primary teacher"},{"id":"Nt12rXSd","value":"electrician"},{"id":"Nt12rZ0i","value":"internship"},{"id":"Nt12rWB9","value":"diesel mechanic"},{"id":"Nt12roB3","value":"youth worker"},{"id":"Nt12rlcb","value":"support worker"},{"id":"Nt12rdUy","value":"payroll"},{"id":"Nt12rpT7","value":"hault ruck"},{"id":"Nt12ra0Q","value":"mental health"},{"id":"Nt12rjoK","value":"scrum master"},{"id":"Nt12rhGc","value":"psychologist"},{"id":"Nt12rf0i","value":"project coordinator"},{"id":"Nt12rVSS","value":"data entry"},{"id":"Nt12rRqn","value":"aged care"},{"id":"Nt12rWhc","value":"driver"},{"id":"Nt12rme5","value":"technician"},{"id":"Nt12rUSQ","value":"commonwealth bank"},{"id":"Nt12reUM","value":"pharmacy"},{"id":"Nt12rVCc","value":"data analyst"},{"id":"Nt12riGK","value":"retail"},{"id":"Nt12rXiM","value":"engineer"},{"id":"Nt12rTSH","value":"case manager"},{"id":"Nt12rfVJ","value":"product manager"},{"id":"Nt12rng3","value":"truck driver"},{"id":"Nt12rcT9","value":"operations manager"},{"id":"Nt12rpDL","value":"grader"},{"id":"Nt12rjHE","value":"risk management"},{"id":"Nt12rTA3","value":"bus driver"},{"id":"Nt12rbD_","value":"nurse"},{"id":"Nt12rYz4","value":"geologist"},{"id":"Nt12rkZ5","value":"speech pathologist"},{"id":"Nt12rWRk","value":"disability support"},{"id":"Nt12rgz4","value":"project officer"},{"id":"Nt12rmvT","value":"trainee"},{"id":"Nt12rfks","value":"project"},{"id":"Nt12rR9R","value":"aldi"},{"id":"Nt12rlL7","value":"supply chain"},{"id":"Nt12raEr","value":"kindergarten teacher"},{"id":"Nt12rdFD","value":"pathology"},{"id":"Nt12rnxl","value":"university"},{"id":"Nt12rWxw","value":"early childhood teacher"},{"id":"Nt12rekA","value":"physiotherapist"},{"id":"Nt12riV4","value":"retail assistant"},{"id":"Nt12rSf2","value":"apprenticeship"},{"id":"Nt12rYTb","value":"financial planner"},{"id":"Nt12rUB_","value":"cleaning"},{"id":"Nt12rdk1","value":"personal assistant"},{"id":"Nt12rcD6","value":"operational risk"},{"id":"Nt12rk7e","value":"supervisor"},{"id":"Nt12rjX_","value":"risk manager"},{"id":"Nt12rlsg","value":"teacher"},{"id":"Nt12rYkI","value":"fitter"},{"id":"Nt12roi2","value":"dozer"},{"id":"Nt12rgkI","value":"project manager"},{"id":"Nt12rUyI","value":"data"},{"id":"Nt12rgUL","value":"project engineer"},{"id":"Nt12rSPa","value":"apprentice"},{"id":"Nt12rozI","value":"dump truck"},{"id":"Nt12rc1P","value":"part time"},{"id":"Nt12rbTz","value":"nursing"},{"id":"Nt12rkJX","value":"social worker"},{"id":"Nt12raUm","value":"manager"},{"id":"Nt12rVi2","value":"data scientist"},{"id":"Nt12rm_y","value":"traineeship"}],"publisher":{"name":"Seek ANZ","active":true,"uuid":"f8f33a00-a77d-4697-bf24-963ba1ed3c6b","version_bucket":"stable","id":5031},"params":{"link_header_bidder":false,"site_level_supertag_config":"site","recommend":false,"control_tag_pixel_throttle":100,"fingerprint":false,"optout_button_optout_text":"Browser Opt Out","user_data_timing":"load","consent_active":true,"use_central_usermatch":true,"store_realtime_segments":false,"tag_source":false,"link_hb_start_event":"ready","optout_button_optin_text":"Browser Opt In","link_hb_timeout":2000,"link_hb_adserver_subordinate":true,"optimize_realtime_segments":false,"link_hb_adserver":"dfp","target_fingerprint":false,"context_terms":true,"optout_button_id":"kx-optout-button","dfp_premium":true,"control_tag_namespace":"seekanz"},"prioritized_segments":[],"realtime_segments":[],"services":{"userdata":"//cdn.krxd.net/userdata/get","contentConnector":"https://connector.krxd.net/content_connector","stats":"//apiservices.krxd.net/stats","optout":"//cdn.krxd.net/userdata/optout/status","event":"//beacon.krxd.net/event.gif","set_optout":"https://consumer.krxd.net/consumer/optout","data":"//beacon.krxd.net/data.gif","link_hb_stats":"//beacon.krxd.net/link_bidder_stats.gif","userData":"//cdn.krxd.net/userdata/get","link_hb_mas":"https://link.krxd.net/hb","config":"//cdn.krxd.net/controltag/{{ confid }}.js","social":"//beacon.krxd.net/social.gif","addSegment":"//cdn.krxd.net/userdata/add","pixel":"//beacon.krxd.net/pixel.gif","um":"https://usermatch.krxd.net/um/v2","controltag":"//cdn.krxd.net/ctjs/controltag.js.{hash}","loopback":"https://consumer.krxd.net/consumer/tmp_cookie","remove":"https://consumer.krxd.net/consumer/remove/f8f33a00-a77d-4697-bf24-963ba1ed3c6b","click":"https://apiservices.krxd.net/click_tracker/track","stats_export":"//beacon.krxd.net/controltag_stats.gif","userdataApi":"//cdn.krxd.net/userdata/v1/segments/get","cookie":"//beacon.krxd.net/cookie2json","proxy":"//cdn.krxd.net/partnerjs/xdi","consent_get":"https://consumer.krxd.net/consent/get/f8f33a00-a77d-4697-bf24-963ba1ed3c6b","consent_set":"https://consumer.krxd.net/consent/set/f8f33a00-a77d-4697-bf24-963ba1ed3c6b","is_optout":"https://beacon.krxd.net/optout_check","impression":"//beacon.krxd.net/ad_impression.gif","transaction":"//beacon.krxd.net/transaction.gif","log":"//jslog.krxd.net/jslog.gif","portability":"https://consumer.krxd.net/consumer/portability/f8f33a00-a77d-4697-bf24-963ba1ed3c6b","set_optin":"https://consumer.krxd.net/consumer/optin","usermatch":"//beacon.krxd.net/usermatch.gif"},"experiments":[],"site":{"name":"SEEK: Candidate - AU","cap":255,"id":1687373,"organization_id":5031,"uid":"vdya6270e"},"tags":[{"id":45595,"name":"Facebook: SEEK Candidate - AU","content":"<script>\n(function() {\n    var c = Krux;\n    function n() {\n        var e = c('require:underscore');\n        var t = \"false\" === \"true\";\n        var n = c('get', atob('dXNlcl9zZWdtZW50cw==')) || [];\n        var i = e.without('vg1coa98v:skecau-webvisits-all,vom8orxb9:skecau-industry-advermediaarts,vn242giey:skec-industry-adminandoffice'.split(',').map(function(e) {\n            var t = e.split(':');\n            if (t.length == 2 && ~n.indexOf(t[0])) {\n                return t[1];\n            }\n        }), undefined);\n        if (t || i.length) {\n            !function(f,b,e,v,n,t,s)\n            {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n            n.callMethod.apply(n,arguments):n.queue.push(arguments)};\n            if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.agent='tmsalesforce';n.version='2.0';\n            n.queue=[];t=b.createElement(e);t.async=!0;\n            t.src=v;s=b.getElementsByTagName(e)[0];\n            s.parentNode.insertBefore(t,s)}(window, document,'script',\n            'https://connect.facebook.net/en_US/fbevents.js');\n            fbq('init', '919117114837585');\n\n            var r = 0, a = i.length;\n            for (;r < a; r++) {\n                fbq('trackSingle', '919117114837585', 'ViewContent', {\n                    content_name: i[r]\n                });\n            }\n        }\n    }\n    if (c('get', 'config').params.consent_active) {\n        c('consent:get', function(e, t) {\n            if (t.settings.tg) {\n                n();\n            }\n        });\n    } else {\n        n();\n    }\n}).call();\n</script>","target":null,"target_action":"append","timing":"asap","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":[],"collects_data":true},{"id":44872,"name":"DTC:All Sites - URL//Standard DTC","content":"<script>\n(function(){\n\tKrux('scrape',{'page_attr_url_path_1':{'url_path':'1'}});\n\tKrux('scrape',{'page_attr_url_path_2':{'url_path':'2'}});\n\tKrux('scrape',{'page_attr_url_path_3':{'url_path':'3'}});\n  \tKrux('scrape',{'page_attr_url_path_4':{'url_path':'4'}});\n  \tKrux('scrape',{'page_attr_url_path_5':{'url_path':'5'}});\n\tKrux('scrape',{'page_attr_meta_keywords':{meta_name:'keywords'}});\n\n\tKrux('scrape',{'page_attr_domain':{url_domain: '4'}});\n\n})();\n</script>","target":null,"target_action":"append","timing":"onready","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":45044,"name":"Standard DTC","content":"<script>\n(function() {\n    /* Standard but configurable DTC */\n    var comDomain, domain, level, libUtil, pathLevel, prefix, toSet;\n    libUtil = Krux('require:util.library-tag');\n    toSet = {};\n    level = 1;\n    while (level <= Number('7')) {\n        pathLevel = Krux('scrape.url_path', level);\n        if (pathLevel) {\n            if ('false' === 'true') {\n                pathLevel = (\"\" + pathLevel).replace(\n                    /\\.(?:html?|php[0-9]?|aspx?|cfg|py)$/i, '');\n            }\n            toSet[\"page_attr_url_path_\" + level] = pathLevel;\n        }\n        level++;\n    }\n    toSet['page_attr_meta_keywords'] = Krux('scrape.meta_name', 'keywords');\n    prefix = libUtil.resolvePrefix('get', 'site',\n        'undefined');\n    toSet = Krux('prefix:attr', toSet, prefix);\n    domain = Krux('get', 'domain');\n    comDomain = domain.match(/\\.([^\\.]+\\.com)$/);\n    if (comDomain) {\n        domain = comDomain[1];\n    }\n    toSet['page_attr_domain'] = domain;\n    Krux('set', toSet);\n}).call();\n</script>","target":null,"target_action":"append","timing":"onready","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":45100,"name":"kruxCandidateAU whitelist dtc","content":"<script>\n(function() {\n    /* Selective Attribute DataLayer Library Tag */\n    var _, allAttr, allowedList, attr, attributes, dataLayerIngester, dataObj,\n        isAllowed, keepCase, libUtil, omitKeys, pageAttr, prefix, toSet, trim,\n        userAttr, util, value,\n        hasProp = {}.hasOwnProperty;\n    _ = Krux('require:underscore');\n    util = Krux('require:util');\n    libUtil = Krux('require:util.library-tag');\n    dataLayerIngester = Krux('require:scrape').ingestDataLayer;\n\n    /* Safe copy of dataLayer object */\n    dataObj = Krux('scrape.javascript', 'kruxCandidateAU');\n\n    /* String trimming helper function */\n    trim = function(attr) {\n        return (\"\" + attr).replace(/^\\s+|\\s+$/g, '');\n    };\n\n    /* Attribute configs */\n    pageAttr = _.map('eventName,section,searchKeywordsSelected,searchClassificationId,searchSubClassificationId,searchWorkType,searchSalaryRange,searchPage,searchSalaryType,country,jobSubClassification,jobClassification,jobSubClassificationId,jobClassificationId,advertiserName,advertiserId,companyId,companyName,jobLocation,roleTitle,rrQuestionIds,rrAnswerIds,searchKeywords,searchSalaryFrom,searchSalaryTo,searchClassification,searchSubClassification'.split(','), trim);\n    userAttr = _.map('kruxCandidateId,candidateId'.split(','), trim);\n\n    /* Create a array of attributes striping any empty strings */\n    allAttr = _.without(pageAttr.concat(userAttr), '');\n\n    /* Configuration settings */\n    keepCase = 'false' === 'true';\n    omitKeys = 'undefined'.split(',');\n\n    /* Resolve Prefix */\n    prefix = libUtil.resolvePrefix('text', 'candidate_au',\n        'undefined');\n\n    /* Function to varify if attribute should be used */\n    isAllowed = function(value, whitelist) {\n        var i, len, str, x;\n        str = \"\" + value;\n        if (!((value != null) && str.length > 0)) {\n            return false;\n        }\n        for (i = 0, len = whitelist.length; i < len; i++) {\n            x = whitelist[i];\n            if (value.match(x) != null) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    /* Get a full list of attributes usting the dataLayer tool */\n    attributes = dataLayerIngester(dataObj, {\n        omitKeys: libUtil.removeFalsyStrings(omitKeys.concat(libUtil.EXCLUDE_KEYS_CONFIG)),\n        omitValues: libUtil.EXCLUDE_VALUES_CONFIG,\n        caseSensitive: keepCase,\n        useFullPath: 'true' === 'true',\n        useLastValue: 'false' === 'true',\n        customDelimited: [/./],\n        altDelimiter: ',',\n        userKeys: _.map(userAttr, function(exp) {\n            return new RegExp(\"(^|\\\\.)\" + exp + \"$\");\n        }),\n        optimizeNames: true\n    });\n\n    /* Only set Attributes in the allowed list */\n    allowedList = _.map(allAttr, function(name) {\n        return new RegExp(\"(_attr_|_attr_\" + prefix + \"|\\\\.)\" + (keepCase ?\n            name : libUtil.normalizeAttrName(name, {\n                removeDot: false\n            })) + \"$\");\n    });\n    toSet = {};\n    for (attr in attributes) {\n        if (!hasProp.call(attributes, attr)) continue;\n        value = attributes[attr];\n        if (isAllowed(attr, allowedList)) {\n            toSet[attr] = value;\n        }\n    }\n    toSet = Krux('prefix:attr', toSet, prefix);\n    Krux('set', toSet);\n}).call();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":45126,"name":"User attr generic DTC","content":"<script>\n(function() {\n    /* Generic Scrape Tag - Configurable Data Collection */\n    var _, filterValues, libUtil, prefix, scrapeConfig, toSet;\n    _ = Krux('require:underscore');\n    libUtil = Krux('require:util.library-tag');\n    toSet = {};\n    filterValues = function(val) {\n        var i, item, len, ref, str, x;\n        if (_.isArray(val)) {\n            return _.compact((function() {\n                var i, len, results;\n                results = [];\n                for (i = 0, len = val.length; i < len; i++) {\n                    item = val[i];\n                    results.push(filterValues(item));\n                }\n                return results;\n            })());\n        }\n        str = \"\" + val;\n        if (!((val != null) && str.length > 0)) {\n            return;\n        }\n        ref = libUtil.EXCLUDE_VALUES_CONFIG;\n        for (i = 0, len = ref.length; i < len; i++) {\n            x = ref[i];\n            if (str.match(x) != null) {\n                return;\n            }\n        }\n        return val;\n    };\n    scrapeConfig = function(config, type) {\n        var attr, i, len, parts, ref, results, value;\n        ref = libUtil.removeFalsyStrings(config);\n        results = [];\n        for (i = 0, len = ref.length; i < len; i++) {\n            attr = ref[i];\n            parts = attr.split('|');\n            if (parts.length === 1 && 'js_global'.match(/(dom|javascript)/)) {\n                continue;\n            }\n            if (parts.length === 1) {\n                parts.unshift(libUtil.normalizeAttrName(parts[0]));\n            }\n            switch ('js_global') {\n                case 'get':\n                    value = filterValues(Krux('get', parts[1]));\n                    break;\n                default:\n                    value = filterValues(Krux('scrape.js_global', parts[1]));\n            }\n            if (value) {\n                results.push(toSet[type + \"_attr_\" + parts[0]] = value);\n            } else {\n                results.push(void 0);\n            }\n        }\n        return results;\n    };\n    scrapeConfig('undefined', 'page');\n    scrapeConfig('email_sha256|kruxCandidateAU.email_sha256,email_sha256|kruxCandidateNZ.email_sha256,email_sha256|kruxHirer.email_sha256,email_sha256|kruxLearning.email_sha256,candidate_login_guid|kruxCandidateAU.loginGuid,candidate_login_guid|kruxCandidateNZ.loginGuid,userId|kruxHirerAU.userId,userId|kruxHirerNZ.userId,advertiserCombinedId|kruxHirerAU.advertiserCombinedId,advertiserCombinedId|kruxHirerNZ.advertiserCombinedId,seek_candidate_id|kruxCandidateAU.candidateId,seek_candidate_id|kruxCandidateNZ.candidateId', 'user');\n    prefix = libUtil.resolvePrefix('none', 'undefined',\n        'undefined');\n    toSet = Krux('prefix:attr', toSet, prefix);\n    Krux('set', toSet);\n}).call();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":45401,"name":"Seek Whitelist DTC","content":"<script>\n(function() {\n    /* Selective Attribute DataLayer Library Tag */\n    var _, allAttr, allowedList, attr, attributes, dataLayerIngester, dataObj,\n        isAllowed, keepCase, libUtil, omitKeys, pageAttr, prefix, toSet, trim,\n        userAttr, util, value,\n        hasProp = {}.hasOwnProperty;\n    _ = Krux('require:underscore');\n    util = Krux('require:util');\n    libUtil = Krux('require:util.library-tag');\n    dataLayerIngester = Krux('require:scrape').ingestDataLayer;\n\n    /* Safe copy of dataLayer object */\n    dataObj = Krux('scrape.javascript', 'kruxCandidateAU');\n\n    /* String trimming helper function */\n    trim = function(attr) {\n        return (\"\" + attr).replace(/^\\s+|\\s+$/g, '');\n    };\n\n    /* Attribute configs */\n    pageAttr = _.map('salaryRangeSelected,roleTitle,rrQuestionIds,rrAnswerIds'.split(','), trim);\n    userAttr = _.map('undefined'.split(','), trim);\n\n    /* Create a array of attributes striping any empty strings */\n    allAttr = _.without(pageAttr.concat(userAttr), '');\n\n    /* Configuration settings */\n    keepCase = 'false' === 'true';\n    omitKeys = 'undefined'.split(',');\n\n    /* Resolve Prefix */\n    prefix = libUtil.resolvePrefix('none', 'undefined',\n        'undefined');\n\n    /* Function to varify if attribute should be used */\n    isAllowed = function(value, whitelist) {\n        var i, len, str, x;\n        str = \"\" + value;\n        if (!((value != null) && str.length > 0)) {\n            return false;\n        }\n        for (i = 0, len = whitelist.length; i < len; i++) {\n            x = whitelist[i];\n            if (value.match(x) != null) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    /* Get a full list of attributes usting the dataLayer tool */\n    attributes = dataLayerIngester(dataObj, {\n        omitKeys: libUtil.removeFalsyStrings(omitKeys.concat(libUtil.EXCLUDE_KEYS_CONFIG)),\n        omitValues: libUtil.EXCLUDE_VALUES_CONFIG,\n        caseSensitive: keepCase,\n        useFullPath: 'true' === 'true',\n        useLastValue: 'false' === 'true',\n        customDelimited: [/./],\n        altDelimiter: ',',\n        userKeys: _.map(userAttr, function(exp) {\n            return new RegExp(\"(^|\\\\.)\" + exp + \"$\");\n        }),\n        optimizeNames: true\n    });\n\n    /* Only set Attributes in the allowed list */\n    allowedList = _.map(allAttr, function(name) {\n        return new RegExp(\"(_attr_|_attr_\" + prefix + \"|\\\\.)\" + (keepCase ?\n            name : libUtil.normalizeAttrName(name, {\n                removeDot: false\n            })) + \"$\");\n    });\n    toSet = {};\n    for (attr in attributes) {\n        if (!hasProp.call(attributes, attr)) continue;\n        value = attributes[attr];\n        if (isAllowed(attr, allowedList)) {\n            toSet[attr] = value;\n        }\n    }\n    toSet = Krux('prefix:attr', toSet, prefix);\n    Krux('set', toSet);\n}).call();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":45557,"name":"DTC:SKECAU - URL//UTM","content":"<script>\n(function(){\n\n\tvar params = Krux('require:util').urlParams();\n\t\n\tKrux ('set', { \n\t'page_attr_seekau_utm_source': params.utm_source,\n\t'page_attr_seekau_utm_medium': params.utm_medium,\n\t'page_attr_seekau_utm_campaign': params.utm_campaign,\n\t'page_attr_seekau_utm_content': params.utm_content,\n\t'page_attr_seekau_utm_term': params.utm_term \n\t});\n\t\n})();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":45887,"name":"GA - RLSA: SEEK Candidate - AU","content":"<script>\n  gtag('event', 'as_segment_vg1coa98v', {\n    'send_to': 'AW-1071659179',\n  });\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":["and",["and",["and",["intersects","$user_segments",["vg1coa98v"]]]]],"collects_data":true},{"id":45930,"name":"GA - RLSA: SEEK Candidate - AU 2","content":"<script>\n  gtag('event', 'view_item', {\n    'id':'vg1coa98v',\n    'google_business_vertical': 'custom',\n    'send_to': 'AW-1071659179',\n  });\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":["and",["and",["and",["intersects","$user_segments",["vg1coa98v"]]]]],"collects_data":true},{"id":45931,"name":"GA - RLSA: SEEK Candidate - AU 3","content":"<!-- Event snippet for AS: SKEC - All Visitors remarketing page -->\n<script>\n  gtag('event', 'conversion', {\n      'send_to': 'AW-1071659179/FhWTCLCL1OwBEKvxgP8D',\n      'value': 1.0,\n      'currency': 'AUD',\n      'aw_remarketing_only': true\n  });\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":["and",["and",["and",["intersects","$user_segments",["vg1coa98v"]]]]],"collects_data":true}],"usermatch_tags":[{"id":6,"name":"Google User Match","content":"<script>\r\n(function() {\r\n\r\nvar kuid = Krux('get', 'user');\r\n  if(kuid){\r\n  // original google user match tag. will be deprecated june 1, 2020\r\n  new Image().src = 'https://usermatch.krxd.net/um/v2?partner=google';\r\n\r\n  // new google user match where they host the match table. The KUID needs to be base64 encoded, but the ids sent will be regular kuids\r\n  var baseEncodedKuid = btoa(kuid).replace(/=$/, '');\r\n  new Image().src = 'https://cm.g.doubleclick.net/pixel?google_nid=krux_digital&google_hm='+baseEncodedKuid;\r\n  }\r\n\r\n})();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":20,"name":"Yahoo! DataX User Match","content":"<script>\r\n(function(){\r\n    var kuid = Krux('get', 'user');\r\n        if (kuid) {\r\n            var prefix = 'https:';\r\n            var rurl = prefix + '//cms.analytics.yahoo.com/cms?partner_id=KRUX';\r\n            var i = new Image();\r\n            i.src = rurl;\r\n        }\r\n})();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":2,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true}],"link":{"adslots":{},"bidders":{}}};
  
  for (var i = 0, tags = config.tags, len = tags.length, tag; (tag = tags[i]); ++i) {
    if (String(tag.id) in cs) {
      tag.content = cs[tag.id];
    }
  }

  
  var esiGeo = String(function(){/*
   <esi:include src="/geoip_esi"/>
  */}).replace(/^.*\/\*[^{]+|[^}]+\*\/.*$/g, '');

  if (esiGeo) {
    log('Got a request for:', esiGeo, 'adding geo to config.');
    try {
      config.geo = w.JSON.parse(esiGeo);
    } catch (__) {
      
      log('Unable to parse geo from:', config.geo);
      config.geo = {};
    }
  }



  var proxy = (window.Krux && window.Krux.q && window.Krux.q[0] && window.Krux.q[0][0] === 'proxy');

  if (!proxy || true) {
    

  load('//cdn.krxd.net/ctjs/controltag.js.0631b7d64dbbd3656a8b7368ad227a04', function() {
    log('Loaded stable controltag resource');
    Krux('config', config);
  });

  }

})(window, (function() {
  var obj = {};
  
  return obj;
})());
